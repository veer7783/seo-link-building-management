version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: linkmanagement_postgres
    environment:
      POSTGRES_DB: linkmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - linkmanagement_network

  redis:
    image: redis:7-alpine
    container_name: linkmanagement_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - linkmanagement_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: linkmanagement_backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/linkmanagement
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - linkmanagement_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: linkmanagement_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - linkmanagement_network

  nginx:
    image: nginx:alpine
    container_name: linkmanagement_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - linkmanagement_network

volumes:
  postgres_data:
  redis_data:

networks:
  linkmanagement_network:
    driver: bridge
